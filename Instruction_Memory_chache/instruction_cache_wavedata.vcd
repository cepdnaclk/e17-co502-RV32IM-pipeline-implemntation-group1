$date
	Thu May 11 13:21:15 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module instruction_cache_tb $end
$var wire 32 ! READDATA [31:0] $end
$var wire 128 " MEM_READDATA [127:0] $end
$var wire 1 # MEM_READ $end
$var wire 1 $ MEM_BUSYWAIT $end
$var wire 28 % MEM_ADDRESS [27:0] $end
$var wire 1 & BUSYWAIT $end
$var reg 32 ' ADDRESS [31:0] $end
$var reg 1 ( CLK $end
$var reg 1 ) RESET $end
$var integer 32 * j [31:0] $end
$scope module my_instruction_cache $end
$var wire 32 + ADDRESS [31:0] $end
$var wire 1 ( CLK $end
$var wire 128 , DATA_OUT [127:0] $end
$var wire 1 - HIT $end
$var wire 1 ) RESET $end
$var wire 25 . TAG_OUT [24:0] $end
$var wire 1 / VALID_OUT $end
$var wire 1 0 TAG_STATUS $end
$var wire 128 1 MEM_READDATA [127:0] $end
$var wire 1 $ MEM_BUSYWAIT $end
$var reg 1 & BUSYWAIT $end
$var reg 28 2 MEM_ADDRESS [27:0] $end
$var reg 1 # MEM_READ $end
$var reg 2 3 NEXT_STATE [1:0] $end
$var reg 32 4 READDATA [31:0] $end
$var reg 2 5 STATE [1:0] $end
$var integer 32 6 i [31:0] $end
$upscope $end
$scope module my_instruction_memory $end
$var wire 28 7 ADDRESS [27:0] $end
$var wire 1 ( CLK $end
$var wire 1 # READ $end
$var reg 1 $ BUSYWAIT $end
$var reg 1 8 READ_ACCESS $end
$var reg 128 9 READ_DATA [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 : \DATA[0] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 ; \DATA[1] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 < \DATA[2] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 = \DATA[3] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 > \DATA[4] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 ? \DATA[5] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 @ \DATA[6] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 128 A \DATA[7] [127:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 B \TAG[0] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 C \TAG[1] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 D \TAG[2] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 E \TAG[3] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 F \TAG[4] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 G \TAG[5] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 H \TAG[6] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 25 I \TAG[7] [24:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 J \VALID[0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 K \VALID[1] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 L \VALID[2] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 M \VALID[3] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 N \VALID[4] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 O \VALID[5] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 P \VALID[6] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_cache $end
$var reg 1 Q \VALID[7] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 R \MEMORY[0] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 S \MEMORY[1] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 T \MEMORY[2] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 U \MEMORY[3] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 V \MEMORY[4] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 W \MEMORY[5] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 X \MEMORY[6] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 Y \MEMORY[7] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 Z \MEMORY[8] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 [ \MEMORY[9] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 \ \MEMORY[10] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 ] \MEMORY[11] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 ^ \MEMORY[12] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 _ \MEMORY[13] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 ` \MEMORY[14] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 a \MEMORY[15] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 b \MEMORY[16] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 c \MEMORY[17] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 d \MEMORY[18] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 e \MEMORY[19] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 f \MEMORY[20] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 g \MEMORY[21] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 h \MEMORY[22] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 i \MEMORY[23] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 j \MEMORY[24] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 k \MEMORY[25] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 l \MEMORY[26] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 m \MEMORY[27] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 n \MEMORY[28] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 o \MEMORY[29] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 p \MEMORY[30] [7:0] $end
$upscope $end
$upscope $end
$scope module instruction_cache_tb $end
$scope module my_instruction_memory $end
$var reg 8 q \MEMORY[31] [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
xQ
xP
xO
xN
xM
xL
xK
xJ
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
x8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
x0
x/
bx .
x-
bx ,
bx +
b100000 *
x)
1(
bx '
x&
bx %
x$
x#
bx "
bx !
$end
#1
0)
#2
08
0$
0#
b0 3
bx A
bx I
0Q
bx @
bx H
0P
bx ?
bx G
0O
bx >
bx F
0N
bx =
bx E
0M
bx <
bx D
0L
bx ;
bx C
0K
bx :
0&
bx B
0J
b1000 6
b0 5
1)
#3
1&
b0 '
b0 +
0)
#4
b1 3
0-
0/
0(
#8
18
1$
b0 %
b0 2
b0 7
1#
b1 3
b1 5
1(
#12
0(
#16
1(
#20
0(
#24
1(
#28
0(
#32
1(
#36
0(
#40
1(
#44
0(
#48
1(
#52
0(
#56
1(
#60
0(
#64
1(
#68
0(
#72
1(
#76
0(
#80
1(
#84
0(
#88
1(
#92
0(
#96
1(
#100
0(
#104
1(
#108
0(
#112
1(
#116
0(
#120
1(
#124
0(
#128
1(
#132
0(
#136
1(
#140
0(
#144
1(
#148
0(
#152
1(
#156
0(
#160
1(
#164
0(
#168
1(
#172
0(
#176
1(
#180
0(
#184
1(
#188
0(
#192
1(
#196
0(
#200
1(
#204
0(
#208
1(
#212
0(
#216
1(
#220
0(
#224
1(
#228
0(
#232
1(
#236
0(
#240
1(
#244
0(
#248
1(
#252
0(
#256
1(
#260
0(
#264
1(
#268
0(
#272
1(
#276
0(
#280
1(
#284
0(
#288
1(
#292
0(
#296
1(
#300
0(
#304
1(
#308
0(
#312
1(
#316
0(
#320
1(
#324
0(
#328
1(
#332
0(
#336
1(
#340
0(
#344
1(
#348
0(
#352
1(
#356
0(
#360
1(
#364
0(
#368
1(
#372
0(
#376
1(
#380
0(
#384
1(
#388
0(
#392
1(
#396
0(
#400
1(
#404
0(
#408
1(
#412
0(
#416
1(
#420
0(
#424
1(
#428
0(
#432
1(
#436
0(
#440
1(
#444
0(
#448
1(
#452
0(
#456
1(
#460
0(
#464
1(
#468
0(
#472
1(
#476
0(
#480
1(
#484
0(
#488
1(
#492
0(
#496
1(
#500
0(
#503
